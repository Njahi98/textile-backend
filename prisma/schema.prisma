// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Worker {
  id                 Int                 @id @default(autoincrement())
  name               String
  role               String?             // example: "operator", "supervisor"
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  assignments        Assignment[]
  performanceRecords PerformanceRecord[]
}

model ProductionLine {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  capacity    Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assignments Assignment[]
}

model Assignment {
  id               Int            @id @default(autoincrement())
  workerId         Int
  productionLineId Int
  position         String         // example: "operator"
  date             DateTime
  shift            String         // example : "morning"
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  worker           Worker         @relation(fields: [workerId], references: [id])
  productionLine   ProductionLine @relation(fields: [productionLineId], references: [id])
}

model PerformanceRecord {
  id          Int      @id @default(autoincrement())
  workerId    Int
  date        DateTime
  piecesMade  Int
  timeTaken   Float    // in hours or minutes
  errorRate   Float    // percentage
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  worker      Worker   @relation(fields: [workerId], references: [id])
}